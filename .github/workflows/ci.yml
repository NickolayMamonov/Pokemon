name: CI

on:
  push:
    branches: [ master, dev, add-flow-based-arch ]
  pull_request:
    branches: [ master, dev ]

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxMetaspaceSize=1g -XX:+HeapDumpOnOutOfMemoryError"

jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Make gradlew executable
      run: chmod +x gradlew
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-home-cache-cleanup: true
        
    - name: Create local.properties
      run: |
        echo "sdk.dir=$ANDROID_HOME" > local.properties
        
    - name: Run unit tests
      run: ./gradlew test --stacktrace
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: unit-test-results
        path: |
          **/build/test-results/test*/
          **/build/reports/tests/

  build:
    name: Build APK  
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Make gradlew executable
      run: chmod +x gradlew
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      
    - name: Create local.properties
      run: echo "sdk.dir=$ANDROID_HOME" > local.properties
      
    - name: Build debug APK
      run: ./gradlew assembleDebug --stacktrace
      
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: app/build/outputs/apk/debug/*.apk
